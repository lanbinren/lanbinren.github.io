<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>枫间琉璃</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-22T02:50:31.121Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>枫间琉璃</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo优化</title>
    <link href="http://yoursite.com/2018/12/20/hexo%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/12/20/hexo优化/</id>
    <published>2018-12-20T03:05:25.000Z</published>
    <updated>2018-12-22T02:50:31.121Z</updated>
    
    <content type="html"><![CDATA[<p>优化参考 网站<br><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009544924</a><br><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#%E9%99%84%E4%B8%8A%E6%88%91%E7%9A%84-custom-styl" target="_blank" rel="noopener">https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#%E9%99%84%E4%B8%8A%E6%88%91%E7%9A%84-custom-styl</a></p><div><br>            <div style="text-align:center;color: #636363;font-size:14px;letter-spacing: 10px">本文结束啦<i class="fa fa-bell"></i>感谢您的阅读</div>    <br></div><p>在 \themes\next\layout_macro 新建 passage-end-tag.swig 文件</p><p>打开更新文章 时间<br>themes\next_config.yml<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  updated_at:</span> <span class="literal">true</span><span class="string">//false</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;优化参考 网站&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000009544924&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://segmentfault.com/a/11900000095449
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>征服C指针</title>
    <link href="http://yoursite.com/2018/12/13/%E5%BE%81%E6%9C%8DC%E6%8C%87%E9%92%88/"/>
    <id>http://yoursite.com/2018/12/13/征服C指针/</id>
    <published>2018-12-13T09:51:41.703Z</published>
    <updated>2018-11-15T08:07:51.471Z</updated>
    
    <content type="html"><![CDATA[<p>使用 printf()输出指针的值时，应使用参数%p。很多人都使用过%x 这样的参数，这种使用方式是错误的。<br>经常有一种错误的程序写法：使用 NULL 来结束字符串。<br>将 0 当作空指针来使用，除了极其例外的情况，通常是不会发生错误的。<br>p[i]是*(p + i)的简便写法。</p><p>指向函数的指针”本质上也是指针（地址） ，所以可以将它赋给指针型变量。</p><p>int (<em>func_p)(double); ←指向函数的指针<br>int (</em>func_table[])(double); ←指向函数的指针的数组</p><p>静态变量是从程序启动到运行结束为止持续存在的变量。因此，静态变量总是在虚拟地址空间上占有固定的区域。</p><p>为了在链接器中将名称结合起来，各目标代码大多都具备一个符号表（symbol table） 。可以使用 nm 这样的命令窥视符号表的内容。</p><blockquote><p>cc -c print_address.c<br>nm print_address.o<br>00000004 b file_static_variable<br>00000000 T func1<br>00000000 b func1_static_variable.4<br>0000002c T func2<br>00000000 t gcc2_compiled.<br>00000004 C global_variable<br>00000048 T main<br>U malloc<br>U printf<br>与全局变量使用 C 进行标记不同的是：和外部没有连接的符号，无论是局部的还是文件内部的 static 变量，都使用了 b 进行标记。<br>函数名后面追加了 T 或者 U。如果函数是在当前文件中定义的，就在其函数名后加 T；如果函数定义在当前文件之外，只是在当前文件内部调用此函数，就在此函数后面加 U。</p></blockquote><p>C 语言中，通常将自动变量保存在栈中。</p><p>assert(条件表达式);  若条件表达式的结果为真，什么也不会发生；若为假，则会输出相关信息并且强制终止程序。</p><p>malloc()管理从操作系统一次性地被分配的内存，一般来说调用 free()之后，对应的内存区域是不会立刻返还给操作系统的。之后随着某次 malloc()调用，恰好将这片区域<br>重新进行分配后，才会发生这部分内容的改写。 </p><p>ANSI C 的标准中是不存在这个函数的。就算你使用了 calloc()，在释放内存的时候也请使用 free()。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 printf()输出指针的值时，应使用参数%p。很多人都使用过%x 这样的参数，这种使用方式是错误的。&lt;br&gt;经常有一种错误的程序写法：使用 NULL 来结束字符串。&lt;br&gt;将 0 当作空指针来使用，除了极其例外的情况，通常是不会发生错误的。&lt;br&gt;p[i]是*(p 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工作相关问题</title>
    <link href="http://yoursite.com/2018/12/13/%E5%B7%A5%E4%BD%9C%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/12/13/工作相关问题/</id>
    <published>2018-12-13T09:51:41.693Z</published>
    <updated>2018-12-24T08:42:32.907Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="#1">Android-P 不能remount问题解决</a></strong><br><strong><a href="#2">9.0 和 8.0 修改gpio状态</a></strong><br><strong><a href="#3">指纹初始化失败</a></strong><br><strong><a href="#4">Android源码 定位问题</a></strong></p><p><div id="1"></div></p><h2 id="Android-P-不能remount问题解决"><a href="#Android-P-不能remount问题解决" class="headerlink" title="Android-P 不能remount问题解决"></a>Android-P 不能remount问题解决</h2><ul><li>Android P + kernel-4.9 or after </li></ul><ul><li>download preloader with verified boot disabled which location is the same as scatter file. //preloader_<project>_SBOOT_DIS.bin</project></li><li>boot to Home Screen</li><li>go to setting -&gt; system -&gt; Developer options -&gt; OEM unlocking</li><li>adb reboot bootloader</li><li>fastboot flashing unlock</li><li>press volume up key</li><li>fastboot reboot</li><li>adb root</li><li>adb disable-verity</li><li>adb reboot</li><li>adb root</li><li>adb remount</li></ul><ul><li>请注意下载最新的adb/fastboot tool<br>Windows<br><a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/platform-tools-latest-windows.zip</a><br>Mac<br><a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a><br>Linux<br><a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/platform-tools-latest-linux.zip</a></li></ul><p><div id="2"></div></p><h2 id="9-0-和-8-0-修改gpio状态"><a href="#9-0-和-8-0-修改gpio状态" class="headerlink" title="9.0 和 8.0 修改gpio状态"></a>9.0 和 8.0 修改gpio状态</h2><p>echo mode 31 1 &gt;  /sys/devices/platform/1000b000.pinctrl/mt_gpio<br><img src="/2018/12/13/工作相关问题/修改gpio状态.png" title="修改gpio状态"></p><p>adb shell echo -w=[pin]:[mode] [pullsel] [din] [dout] [pullen] [dir] [dinv] &gt; /sys/devices/virtual/misc/mtgpio/pin<br><img src="/2018/12/13/工作相关问题/修改gpio63之前.png" title="gpio63修改之前的状态"></p><p>修改模式 # echo -wmode 63 6 &gt; /sys/class/misc/mtgpio/pin<br><img src="/2018/12/13/工作相关问题/修改gpio63之后.png" title="gpio63修改之后的状态"></p><p><div id="3"></div></p><h2 id="展讯SL8541E平台（与9832E相似）初始化偶尔·失败·"><a href="#展讯SL8541E平台（与9832E相似）初始化偶尔·失败·" class="headerlink" title="展讯SL8541E平台（与9832E相似）初始化偶尔·失败·"></a>展讯SL8541E平台（与9832E相似）初始化偶尔·失败·</h2><p>失败时如下图<br><img src="/2018/12/13/工作相关问题/指纹初始化失败.png" title="指纹初始化失败"><br>原因是 该ic等待中断时，判断错误，休眠时间不够。  改为休眠250ms。<br><img src="/2018/12/13/工作相关问题/时序问题导致初始化失败.png" title="spi时序"></p><p>关掉展讯log<br>echo 1 4 1 7 &gt; /proc/sys/kernel/printk</p><p><div id="4"></div></p><h2 id="Android源码在线查看"><a href="#Android源码在线查看" class="headerlink" title="Android源码在线查看"></a>Android源码在线查看</h2><p><a href="http://androidxref.com" target="_blank" rel="noopener">http://androidxref.com</a> </p><h3 id="指纹比对5次失败之后-修改等待时间"><a href="#指纹比对5次失败之后-修改等待时间" class="headerlink" title="指纹比对5次失败之后 修改等待时间"></a>指纹比对5次失败之后 修改等待时间</h3><p>/frameworks/base/core/java/android/hardware/fingerprint/FingerprintManager.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> FAIL_LOCKOUT_TIMEOUT_MS = <span class="number">30</span>*<span class="number">1000</span>;</span><br></pre></td></tr></table></figure><br><img src="/2018/12/13/工作相关问题/指纹5次比对失败.png" title="修改等待时间"></p><h3 id="密码解锁后，仍在比对状态，追踪上层代码"><a href="#密码解锁后，仍在比对状态，追踪上层代码" class="headerlink" title="密码解锁后，仍在比对状态，追踪上层代码"></a>密码解锁后，仍在比对状态，追踪上层代码</h3><p>怀疑有多次调用<br>/hardware/interfaces/biometrics/fingerprint/2.1/default/BiometricsFingerprint.cpp<br><img src="/2018/12/13/工作相关问题/getAuthenticatorId.png" title="getAuthenticatorId.java"><br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Retrieves the authenticator token for binding keys to the lifecycle</span></span><br><span class="line"><span class="comment">  * of the calling user's fingerprints. Used only by internal clients.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">long</span> <span class="title">getAuthenticatorId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (mService != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             <span class="keyword">return</span> mService.getAuthenticatorId(mContext.getOpPackageName());</span><br><span class="line">         &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">             <span class="keyword">throw</span> e.rethrowFromSystemServer();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         Slog.w(TAG, <span class="string">"getAuthenticatorId(): Service not connected!"</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>自动生成权限<br>audit2allow -i sepolicy.log</p><img src="/2018/12/13/工作相关问题/自动生成权限.png" title="自动生成权限"><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sepolicy.log</span><br><span class="line"></span><br><span class="line">01-01 00:06:32.939  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:133): avc: denied &#123; read write &#125; <span class="keyword">for</span> <span class="attribute">name</span>=<span class="string">"vndbinder"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16186 <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:vndbinder_device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.939  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:134): avc: denied &#123; open &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/dev/vndbinder"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16186 <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:vndbinder_device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.939  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:135): avc: denied &#123; ioctl &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/dev/vndbinder"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16186 <span class="attribute">ioctlcmd</span>=6209 <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:vndbinder_device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:136): avc: denied &#123; call &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:r:vndservicemanager:s0 <span class="attribute">tclass</span>=binder <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:137): avc: denied &#123; transfer &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:r:vndservicemanager:s0 <span class="attribute">tclass</span>=binder <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949   444   444 I vndservicemanag: <span class="attribute">type</span>=1400 audit(0.0:138): avc: denied &#123; search &#125; <span class="keyword">for</span> <span class="attribute">name</span>=<span class="string">"4717"</span> <span class="attribute">dev</span>=<span class="string">"proc"</span> <span class="attribute">ino</span>=45591 <span class="attribute">scontext</span>=u:r:vndservicemanager:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=dir <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949   444   444 I vndservicemanag: <span class="attribute">type</span>=1400 audit(0.0:139): avc: denied &#123; read &#125; <span class="keyword">for</span> <span class="attribute">name</span>=<span class="string">"current"</span> <span class="attribute">dev</span>=<span class="string">"proc"</span> <span class="attribute">ino</span>=44817 <span class="attribute">scontext</span>=u:r:vndservicemanager:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949   444   444 I vndservicemanag: <span class="attribute">type</span>=1400 audit(0.0:140): avc: denied &#123; open &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/proc/4717/attr/current"</span> <span class="attribute">dev</span>=<span class="string">"proc"</span> <span class="attribute">ino</span>=44817 <span class="attribute">scontext</span>=u:r:vndservicemanager:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949   444   444 I vndservicemanag: <span class="attribute">type</span>=1400 audit(0.0:141): avc: denied &#123; getattr &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:vndservicemanager:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=process <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.949  4720  4720 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:142): avc: denied &#123; execute_no_trans &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/vendor/bin/sf_ta"</span> <span class="attribute">dev</span>=<span class="string">"mmcblk0p25"</span> <span class="attribute">ino</span>=280 <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:vendor_file:s0 <span class="attribute">tclass</span>=file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:32.989  4720  4720 I sf_ta   : <span class="attribute">type</span>=1400 audit(0.0:143): avc: denied &#123; call &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=binder <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:33.039  4720  4720 I sf_ta   : <span class="attribute">type</span>=1400 audit(0.0:144): avc: denied &#123; read write &#125; <span class="keyword">for</span> <span class="attribute">name</span>=<span class="string">"sunwave_fp"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16210 <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:33.039  4720  4720 I sf_ta   : <span class="attribute">type</span>=1400 audit(0.0:145): avc: denied &#123; open &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/dev/sunwave_fp"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16210 <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:33.039  4720  4720 I sf_ta   : <span class="attribute">type</span>=1400 audit(0.0:146): avc: denied &#123; ioctl &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/dev/sunwave_fp"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16210 <span class="attribute">ioctlcmd</span>=730b <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:33.049  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:147): avc: denied &#123; create &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=netlink_kobject_uevent_socket <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:33.049  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:148): avc: denied &#123; setopt &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=netlink_kobject_uevent_socket <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:06:33.049  4717  4717 I android.hardwar: <span class="attribute">type</span>=1400 audit(0.0:149): avc: denied &#123; bind &#125; <span class="keyword">for</span> <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tclass</span>=netlink_kobject_uevent_socket <span class="attribute">permissive</span>=1</span><br><span class="line">01-01 00:07:00.489  4720  4720 I sf_ta   : <span class="attribute">type</span>=1400 audit(0.0:152): avc: denied &#123; ioctl &#125; <span class="keyword">for</span> <span class="attribute">path</span>=<span class="string">"/dev/sunwave_fp"</span> <span class="attribute">dev</span>=<span class="string">"tmpfs"</span> <span class="attribute">ino</span>=16210 <span class="attribute">ioctlcmd</span>=730b <span class="attribute">scontext</span>=u:r:hal_fingerprint_default:s0 <span class="attribute">tcontext</span>=u:object_r:device:s0 <span class="attribute">tclass</span>=chr_file <span class="attribute">permissive</span>=1</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># audit2allow -i sepolicy.log</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#============= hal_fingerprint_default ==============</span></span><br><span class="line"><span class="attribute">allow</span> hal_fingerprint_default device:chr_file &#123; <span class="attribute">read</span> write ioctl open &#125;;</span><br><span class="line"><span class="attribute">allow</span> hal_fingerprint_default self:binder call;</span><br><span class="line"><span class="attribute">allow</span> hal_fingerprint_default self:netlink_kobject_uevent_socket &#123; <span class="attribute">bind</span> create setopt &#125;;</span><br><span class="line"><span class="attribute">allow</span> hal_fingerprint_default vendor_file:file execute_no_trans;</span><br><span class="line"><span class="attribute">allow</span> hal_fingerprint_default vndbinder_device:chr_file &#123; <span class="attribute">ioctl</span> open &#125;;</span><br><span class="line"><span class="attribute">allow</span> hal_fingerprint_default vndservicemanager:binder &#123; <span class="attribute">transfer</span> call &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">#============= vndservicemanager ==============</span></span><br><span class="line"><span class="attribute">allow</span> vndservicemanager hal_fingerprint_default:dir search;</span><br><span class="line"><span class="attribute">allow</span> vndservicemanager hal_fingerprint_default:file &#123; <span class="attribute">read</span> open &#125;;</span><br><span class="line"><span class="attribute">allow</span> vndservicemanager hal_fingerprint_default:process getattr;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#1&quot;&gt;Android-P 不能remount问题解决&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;#2&quot;&gt;9.0 和 8.0 修改gpio状态&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;#3&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>leetcode 宝石与石头</title>
    <link href="http://yoursite.com/2018/12/13/leetcode/"/>
    <id>http://yoursite.com/2018/12/13/leetcode/</id>
    <published>2018-12-13T09:51:41.692Z</published>
    <updated>2018-12-07T03:03:41.678Z</updated>
    
    <content type="html"><![CDATA[<ol><li>宝石与石头<br>给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。<br>J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此”a”和”A”是不同类型的石头。<a id="more"></a>int numJewelsInStones(char<em> J, char</em> S) {<br>int list[‘z’-‘A’+1]={0},sum=0,i=0;<br>while(S[i]!=’\0’){<br>   list[S[i]-‘A’]++;<br>   i++;<br>}<br>i = 0;<br>while(J[i]!=’\0’){<br>   sum+=list[J[i]-‘A’];<br>   i++;<br>}<br>return sum;<br>}</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;宝石与石头&lt;br&gt;给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。&lt;br&gt;J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此”a”和”A”是不同类型的石头。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git命令</title>
    <link href="http://yoursite.com/2018/12/13/git%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/12/13/git命令/</id>
    <published>2018-12-13T09:51:41.682Z</published>
    <updated>2018-12-20T07:24:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>git init</strong> 初始化 Git 库<br>ssh验证指令生成   SSH 也是唯一一个同时便于读和写操作的网络协议。  生成所在路径/root/.ssh/。<br>           ssh-keygen -t rsa -C “<a href="mailto:your_email@youremail.com" target="_blank" rel="noopener">your_email@youremail.com</a>“<br>           git clone  <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:lanbinren/test.git    拉取分支<br>           git clone  <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:lanbinren/test.git   xxx   指定生成路径到xxx</p><blockquote><p><strong>git status</strong> 检查当前文件状态 ，会看到 README 文件已被跟踪，并处于暂存状态。</p></blockquote><p><strong>git diff</strong> 显示还没有暂存起来的改动，而不是这次工作和上次提交之间的差异。<br><a id="more"></a><br><strong>git diff --cached</strong> 查看暂存起来的文件和上次提交时的快照之间的差异。</p><p><strong>git commit  -v</strong> 选项将修改差异的每一行都包含到注释中来。<br>   （常用）<strong>-m</strong> 参数后跟提交说明  。<br>                  <strong>-a</strong> 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤。</p><p><strong>git commit --amend</strong>  修改最后一次提交。</p><p><strong>git reset HEAD <file></file></strong>取消暂存。 </p><p><strong>git remote</strong>  查看当前配置有哪些远程仓库<br><strong>git remote -v </strong>     可以加上 -v 选项（译注：此为—verbose 的简写，取首字母），显示对应的克隆地址。</p><p><strong>git fetch</strong> 只是将远端的数据拉到本地仓库，并不自动合并到当前工作分支，只有当你确实准备好了，才能手工合并。</p><p><strong>git pull</strong> 是从原始克隆的远端仓库中抓取数据后，合并到工作目录中当前分支。</p><p><strong>git-push</strong> 可将本地版本更新推送到远端仓库中。</p><p><strong>git commit --amend</strong>  修改最后一次提交   </p><p>####查看提交历史</p><p><strong>git log --stat</strong>  列出了修改过的文件，以及其中添加和移除的行数，并在最后列出所有增减行数小计。</p><p><strong>git log --since=2.weeks</strong> 显示两周以前的记录。</p><blockquote><p>选项 说明<br>-(n) 仅显示最近的 n 条提交<br>--since, --after 仅显示指定时间之后的提交。<br>--until, --before 仅显示指定时间之前的提交。<br>--author 仅显示指定作者相关的提交。<br>--committer 仅显示指定提交者相关的提交。</p></blockquote><p><strong>git log --pretty=format:”%h - %an, %ar : %s”</strong>  可以定制要显示的记录格式 。</p><blockquote><p>$ git log --pretty=format:”%h - %an, %ar : %s”<br>ca82a6d - Scott Chacon, 11 months ago : changed the verison number<br>085bb3b - Scott Chacon, 11 months ago : removed unnecessary test code<br>a11bef0 - Scott Chacon, 11 months ago : first commit</p></blockquote><p>表 2.1 列出了常用的格式占位符写法及其代表的意义。<br>|选项 |说明|<br>| :--: | :--: |<br>|%H | 提交对象（commit）的完整哈希字串|<br>|%h  | 提交对象的简短哈希字串|<br>|%T  | 树对象（tree）的完整哈希字串|<br>|%t | 树对象的简短哈希字串|<br>|%P | 父对象（parent）的完整哈希字串|<br>|%p | 父对象的简短哈希字串|<br>|%an |作者（author）的名字|<br>|%ae | 作者的电子邮件地址|<br>|%ad |作者修订日期（可以用 -date= 选项定制格式）|<br>|%ar |作者修订日期，按多久以前的方式显示|<br>|%cn |提交者(committer)的名字|<br>|%ce |提交者的电子邮件地址|<br>|%cd |提交日期|<br>|%cr |提交日期，按多久以前的方式显示|<br>|%s |提交说明|</p><p>####标签</p><p><strong>git tag</strong>   列出当前标签</p><p><strong>git tag -a v0.0 -m ‘my version 0.0’</strong>  创建一个含附注类型的标签</p><p>后期加注标签<br><strong>git log --pretty=oneline</strong>   用一行展示的提交历史<br><strong>git tag -a v1.2 9fceb02</strong>   只要在打标签的时候跟上对应提交对象的校验和（或前几位字符）即可。</p><p>默认情况下， git push 并不会把标签传送到远端服务器上   git push origin [tagname].</p><p>如果要一次推送所有（本地新增的）标签上去，可以使用 --tags 选项 git push origin --tags。</p><p>####Git 命令别名</p><blockquote><p>$ git config --global alias.unstage ‘reset HEAD --‘</p></blockquote><p>这样一来，下面的两条命令完全等同：</p><blockquote><p>$ git unstage fileA<br>$ git reset HEAD fileA<br><strong>git checkout -- benchmarks.rb</strong>  从服务器端重新下载。</p></blockquote><p>使用 git config --global core.editor 命令 设定 编辑器。</p><p>仓库创建后<br>…or create a new repository on the command line</p><p>echo “# My-HEXO” &gt;&gt; README.md<br>git init<br>git add README.md<br>git commit -m “first commit”<br>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:lanbinren/My-HEXO.git<br>git push -u origin master</p><p>…or push an existing repository from the command line</p><p>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:lanbinren/My-HEXO.git</p><p>git pull origin master –allow-unrelated-histories</p><p>后面加上 –allow-unrelated-histories ， 把两段不相干的 分支进行强行合并</p><p>将hexo源码 放到分支<br>提交文件到暂存区<br>git add –all<br>git commit -m “hexo原生数据”</p><p>git clone -b hexo <a href="https://github.com/lanbinren/lanbinren.github.io.git" target="_blank" rel="noopener">https://github.com/lanbinren/lanbinren.github.io.git</a></p><p>设置本地分支追踪远程分支<br>git push –set-upstream origin hexo</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;git init&lt;/strong&gt; 初始化 Git 库&lt;br&gt;ssh验证指令生成   SSH 也是唯一一个同时便于读和写操作的网络协议。  生成所在路径/root/.ssh/。&lt;br&gt;           ssh-keygen -t rsa -C “&lt;a href=&quot;mailto:your_email@youremail.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;your_email@youremail.com&lt;/a&gt;“&lt;br&gt;           git clone  &lt;a href=&quot;mailto:git@github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;git@github.com&lt;/a&gt;:lanbinren/test.git    拉取分支&lt;br&gt;           git clone  &lt;a href=&quot;mailto:git@github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;git@github.com&lt;/a&gt;:lanbinren/test.git   xxx   指定生成路径到xxx&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;git status&lt;/strong&gt; 检查当前文件状态 ，会看到 README 文件已被跟踪，并处于暂存状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;git diff&lt;/strong&gt; 显示还没有暂存起来的改动，而不是这次工作和上次提交之间的差异。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>First Test</title>
    <link href="http://yoursite.com/2018/12/13/FirstNight/"/>
    <id>http://yoursite.com/2018/12/13/FirstNight/</id>
    <published>2018-12-13T09:51:41.681Z</published>
    <updated>2018-03-26T02:29:12.049Z</updated>
    
    <content type="html"><![CDATA[<p>SPI（Serial Peripheral Interface）总线是主要应用于嵌入式系统内部通信的串行同步传输总线协议。通常为四线制的SPI总线支持全双工通信。SPI最初由Motorola在2000年提出，Motorola所定义的SPI标准为业界广泛引用，但不同半导体公司的实施细节可能有所不同，这些区别体现在寄存器设置、信号定义、数据格式等。业界没有统一的SPI标准，具体应用需要参考特定器件手册。</p><p>SPI协议特点包括主从模式、全双工通信、片选功能、模式错误标识及CPU中断、缓冲数据寄存器和可配置时钟相位极性等。SPI允许数据一位一位的传送，甚至允许暂停，因为SCK时钟线由主控设备控制，当没有时钟跳变时，从设备不采集或传送数据。也就是说，主设备通过对SCK时钟线的控制可以完成对通讯的控制。</p><p>应用<br>SPI以其简单高效应用于绝大多数SoC系统上，这些SoC通常同时支持作为主模式或从模式（二选一）。</p><p>FPGAs和其它专用芯片也广泛使用SPI传输数据。比如：</p><p>. 传感器：温度、压力传感器等<br>. 控制设备：音频编解码器等<br>. 通信设备：USB、以太网设备等<br>. 存储器：Flash、EEPROM等<br>. RTC时钟<br>. LCD设备<br>. MMC和SD卡</p><p>在高性能系统中，FPGAs通常使用SPI连接主从设备，比如连接外部传感器，和应用SPI加载配置。相比于JTAG，SPI定位用于高速配置（初始化）板上设备；而JTAG的初衷是为控制设备以相对低的准确度扫描和检测板上IO，在严格要求的场合，JTAG协议支持改变时钟占空比以满足建立和保持时间的要求。因此，JTAG并不定位于高速数据传输的场合。</p><p>优点和缺点</p><p>优点<br>支持全双工通信<br>Push-Pull驱动性能相比Open Drain信号完整性更好，支持高速应用（100MHz以上）<br>协议支持字长不限于8bits，可根据应用特点灵活选择消息字长<br>硬件连接简单</p><p>. 只需要四根信号线（部分应用可以缩减到三根）<br>. 相比I2C和SMbus节省上拉电阻<br>. 相比I2C和SMbus不需要仲裁机制<br>. 从设备使用主设备时钟，节约时钟要求<br>. 从设备无需地址寻址<br>. 无需收发器</p><p>缺点<br>相比I2C两根线，SPI四根线更多<br>没有寻址机制，只能靠设备片选（chip select）选择不同从设备<br>没有数据流控制（但主设备可以通过延缓时钟边缘降低传输速度）<br>没有从设备接收数据ACK，主设备对于发送成功与否不得而知<br>典型应用只支持单主控<br>没有定义数据校验机制<br>没有统一的国际组织维护，变种多不利于不同厂商设备的互操作性（interoperability）<br>相比于RS232、RS422、RS485和CAN，SPI传输距离短<br>不支持热插拔<br>中断操作只能通过额外的信号线，或类似USB 1.1 and 2.0的Periodic Polling实现</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SPI（Serial Peripheral Interface）总线是主要应用于嵌入式系统内部通信的串行同步传输总线协议。通常为四线制的SPI总线支持全双工通信。SPI最初由Motorola在2000年提出，Motorola所定义的SPI标准为业界广泛引用，但不同半导体公司
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ANDROID核心原理与系统应用高效开发</title>
    <link href="http://yoursite.com/2018/12/13/ANDROID%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86%E4%B8%8E%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8%E9%AB%98%E6%95%88%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2018/12/13/ANDROID核心原理与系统应用高效开发/</id>
    <published>2018-12-13T09:51:41.679Z</published>
    <updated>2018-02-26T12:47:57.936Z</updated>
    
    <content type="html"><![CDATA[<p><strong>第一章</strong>   系统框架结构和启动流程</p><p>从事Android 设备硬件移植方面的开发，需要对Linux 语言开发有较深的了解<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通信部分和具体硬件相关子系统结构相结合，了解一个硬件如何适配于<span class="keyword">Android系统。</span></span><br><span class="line"><span class="keyword">启动流程了解硬件优化方面的知识</span></span><br><span class="line"><span class="keyword">GUI系统提供Android系统适配于非手机设备的相关知识</span></span><br><span class="line"><span class="keyword">安全系统方面了解 </span>新增硬件的安全管理</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;第一章&lt;/strong&gt;   系统框架结构和启动流程&lt;/p&gt;
&lt;p&gt;从事Android 设备硬件移植方面的开发，需要对Linux 语言开发有较深的了解&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/02/13/hello-world/"/>
    <id>http://yoursite.com/2017/02/13/hello-world/</id>
    <published>2017-02-13T12:46:25.000Z</published>
    <updated>2018-12-20T03:04:51.979Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
